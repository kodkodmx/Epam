-------------------------------------------------------------------------------
Test set: com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test
-------------------------------------------------------------------------------
Tests run: 26, Failures: 9, Errors: 15, Skipped: 0, Time elapsed: 0.2 s <<< FAILURE! - in com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test
testSimpleFilling{String, int[], String}[1]  Time elapsed: 0.039 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)

testSimpleFilling{String, int[], String}[2]  Time elapsed: 0.002 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)

testSimpleFilling{String, int[], String}[3]  Time elapsed: 0.002 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)

testSimpleFilling{String, int[], String}[4]  Time elapsed: 0.005 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: Failed at 8 ==> expected: <[0, 8, 16, 32, 24, 256, 0, 0]> but was: <[0, 16, 32, 256, 8, 24]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:37)

testSimpleFilling{String, int[], String}[5]  Time elapsed: 0.002 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: Failed at 2 ==> expected: <[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]> but was: <[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:37)

testSimpleFilling{String, int[], String}[7]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)

testSimpleFilling{String, int[], String}[8]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -2 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)

testFillingAndThenGradualRemove{String, int[], List}[1]  Time elapsed: 0.003 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)

testFillingAndThenGradualRemove{String, int[], List}[2]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)

testFillingAndThenGradualRemove{String, int[], List}[3]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)

testFillingAndThenGradualRemove{String, int[], List}[4]  Time elapsed: 0.003 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 8 ==> expected: <[0, 8, 16, 32, 24, 256, 0, 0]
[0, 8, 16, 32, 24, 256, 0, 0]
[0, 8, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 0, 32, 24, 256, 0, 0]
[24, 256, 0, 0]
[256, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]> but was: <[0, 16, 32, 256, 8, 24]
[16, 32, 256, 8, 24]
[16, 32, 256, 8, 24]
[16, 32, 256, 24]
[16, 32, 256, 24]
[16, 32, 256, 24]
[32, 256, 24]
[256, 24]
[256]
[]
[]
[]
[]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)

testFillingAndThenGradualRemove{String, int[], List}[5]  Time elapsed: 0.002 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 2 ==> expected: <[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[8, 9, 10, 0, 0, 0, 0, 7]
[8, 9, 10, 0, 0, 0, 0, 0]
[0, 9, 10, 0]
[10, 0]
[0, 0]> but was: <[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[2, 3, 4, 5, 6, 7, 8, 9, 10]
[3, 4, 5, 6, 7, 8, 9, 10]
[4, 5, 6, 7, 8, 9, 10]
[5, 6, 7, 8, 9, 10]
[6, 7, 8, 9, 10]
[8, 9, 10, 7]
[8, 9, 10]
[9, 10]
[10]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)

testFillingAndThenGradualRemove{String, int[], List}[6]  Time elapsed: 0.003 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 1 ==> expected: <[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 14, 15]
[16, 0, 0, 15]
[16, 0]
[0, 0]> but was: <[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 9, 10, 11, 12, 13, 14, 15]
[16, 10, 11, 12, 13, 14, 15]
[16, 11, 12, 13, 14, 15]
[16, 12, 13, 14, 15]
[16, 13, 14, 15]
[16, 14, 15]
[16, 15]
[16]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)

testFillingAndThenGradualRemove{String, int[], List}[7]  Time elapsed: 0.002 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)

testFillingAndThenGradualRemove{String, int[], List}[8]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -2 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)

testOverflow  Time elapsed: 0.003 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: Expected java.lang.IllegalStateException to be thrown, but nothing was thrown.
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testOverflow(HashtableOpen8to16Test.java:165)

testRandomFillAndRefill{String, int[], List}[1]  Time elapsed: 0.002 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -4 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)

testRandomFillAndRefill{String, int[], List}[2]  Time elapsed: 0.002 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)

testRandomFillAndRefill{String, int[], List}[3]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)

testRandomFillAndRefill{String, int[], List}[4]  Time elapsed: 0.004 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 8 ==> expected: <[24, 0, 0, 0, 0, 0, 0, 0]
[24, 8, 0, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 0, 32, 0, 0]
[0, 8, 256, 0, 0, 32, 0, 0]
[256, 32, 0, 0]
[256, 32, 0, 0]
[32, 0]
[32, 0]
[32, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]
[16, 0]
[16, 0]
[16, 0, 8, 0]
[16, 0, 8, 0]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 24, 0, 0]
[16, 0, 8, 32, 256, 24, 0, 0]> but was: <[24]
[24, 8]
[24, 8, 256]
[24, 8, 256, 0]
[24, 8, 256, 0]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16, 32]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 16, 32, 24, 8]
[256, 16, 32, 24, 8]
[256, 32, 24, 8]
[256, 32, 8]
[256, 32]
[256, 32]
[32]
[32]
[32]
[]
[]
[]
[]
[16]
[16, 0]
[16, 0, 8]
[16, 0, 8]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)

testRandomFillAndRefill{String, int[], List}[5]  Time elapsed: 0.003 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 2 ==> expected: <[0, 0, 0, 0, 0, 0, 0, 7]
[0, 0, 0, 0, 0, 0, 6, 7]
[0, 0, 2, 0, 0, 0, 6, 7]
[0, 0, 2, 0, 4, 0, 6, 7]
[0, 9, 2, 0, 4, 0, 6, 7]
[8, 9, 2, 0, 4, 0, 6, 7]
[8, 9, 2, 10, 4, 0, 6, 7]
[8, 9, 2, 10, 4, 1, 6, 7]
[0, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 0, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 0, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]
[0, 9, 2, 0, 4, 0, 6, 0]
[0, 0, 2, 0, 4, 0, 6, 0]
[4, 0, 6, 0]
[6, 0]
[0, 0]
[0, 5]
[6, 5]
[0, 5, 6, 10]
[8, 5, 6, 10]
[8, 0, 10, 3, 0, 5, 6, 0]
[8, 0, 10, 3, 2, 5, 6, 0]
[8, 0, 10, 3, 2, 5, 6, 7]
[8, 4, 10, 3, 2, 5, 6, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]> but was: <[7]
[6, 7]
[2, 6, 7]
[2, 4, 6, 7]
[9, 2, 4, 6, 7]
[8, 9, 2, 4, 6, 7]
[2, 4, 6, 7, 8, 9, 10]
[1, 2, 4, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 2, 4, 5, 6, 7, 8, 9, 10]
[2, 4, 5, 6, 7, 8, 9, 10]
[2, 4, 5, 6, 8, 9, 10]
[2, 4, 5, 6, 9, 10]
[2, 4, 6, 9, 10]
[9, 2, 4, 6]
[2, 4, 6]
[4, 6]
[6]
[]
[5]
[5, 6]
[10, 5, 6]
[8, 10, 5, 6]
[8, 10, 5, 6]
[8, 2, 10, 5, 6]
[8, 2, 10, 5, 6]
[8, 2, 10, 4, 5, 6]
[1, 2, 4, 5, 6, 8, 10]
[1, 2, 4, 5, 6, 8, 9, 10]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)

testRandomFillAndRefill{String, int[], List}[6]  Time elapsed: 0.006 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
Failed at 1 ==> expected: <[0, 0, 0, 0, 0, 0, 14, 0]
[0, 0, 0, 0, 0, 0, 14, 6]
[8, 0, 0, 0, 0, 0, 14, 6]
[8, 15, 0, 0, 0, 0, 14, 6]
[8, 15, 0, 11, 0, 0, 14, 6]
[8, 15, 0, 11, 3, 0, 14, 6]
[8, 15, 0, 11, 3, 4, 14, 6]
[8, 15, 16, 11, 3, 4, 14, 6]
[16, 1, 0, 3, 4, 0, 6, 0, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 0, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 7, 8, 0, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 2, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]
[16, 0, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]
[16, 8, 0, 0, 12, 5, 0, 0]
[16, 0, 0, 0, 12, 5, 0, 0]
[16, 5, 0, 0]
[0, 5]
[0, 0]
[0, 5]
[9, 5]
[8, 9, 5, 0]
[8, 9, 5, 6]
[8, 9, 16, 0, 0, 5, 6, 0]
[8, 9, 16, 3, 0, 5, 6, 0]
[8, 9, 16, 3, 2, 5, 6, 0]
[8, 9, 16, 3, 2, 5, 6, 11]
[16, 0, 2, 3, 0, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]
[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]
[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 15]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 0, 15]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]> but was: <[14]
[14, 6]
[8, 14, 6]
[8, 15, 14, 6]
[8, 15, 11, 14, 6]
[8, 15, 11, 3, 14, 6]
[3, 4, 6, 8, 11, 14, 15]
[16, 3, 4, 6, 8, 11, 14, 15]
[16, 1, 3, 4, 6, 8, 11, 14, 15]
[16, 1, 3, 4, 6, 7, 8, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 8, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 8, 10, 12, 13]
[16, 1, 2, 5, 8, 10, 12, 13]
[16, 1, 5, 8, 10, 12, 13]
[16, 1, 5, 8, 10, 12]
[16, 5, 8, 10, 12]
[16, 8, 12, 5]
[16, 12, 5]
[16, 5]
[5]
[]
[5]
[9, 5]
[9, 8, 5]
[9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 4, 5, 6]
[16, 4, 5, 6, 8, 9, 13]
[16, 1, 4, 5, 6, 8, 9, 13]
[16, 1, 4, 5, 6, 8, 9, 13, 15]
[16, 1, 4, 5, 6, 8, 9, 12, 13, 15]
[16, 1, 4, 5, 6, 8, 9, 12, 13, 14, 15]
[16, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)

testRandomFillAndRefill{String, int[], List}[7]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)

testRandomFillAndRefill{String, int[], List}[8]  Time elapsed: 0.001 s  <<< ERROR!
java.lang.ArrayIndexOutOfBoundsException: Index -3 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)

