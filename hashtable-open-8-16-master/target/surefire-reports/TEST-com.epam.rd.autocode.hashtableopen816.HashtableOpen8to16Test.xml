<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.2" tests="26" errors="15" skipped="0" failures="9">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/test-classes:/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/classes:/home/betoh/.m2/repository/com/google/guava/guava/23.0/guava-23.0.jar:/home/betoh/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/betoh/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/betoh/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/betoh/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.6.2/junit-jupiter-engine-5.6.2.jar:/home/betoh/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/betoh/.m2/repository/org/junit/platform/junit-platform-engine/1.6.2/junit-platform-engine-1.6.2.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.6.2/junit-jupiter-params-5.6.2.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/betoh/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/betoh/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/betoh/.m2/repository/org/mockito/mockito-core/3.4.0/mockito-core-3.4.0.jar:/home/betoh/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/home/betoh/.m2/repository/net/bytebuddy/byte-buddy-agent/1.10.10/byte-buddy-agent-1.10.10.jar:/home/betoh/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar:"/>
    <property name="java.vm.vendor" value="Ubuntu"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://ubuntu.com/"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-21-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/surefire/surefirebooter11033460137518233711.jar /home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/surefire 2024-08-09T19-13-43_308-jvmRun1 surefire12247922793853893262tmp surefire_011276094345774109908tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test"/>
    <property name="surefire.test.class.path" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/test-classes:/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/classes:/home/betoh/.m2/repository/com/google/guava/guava/23.0/guava-23.0.jar:/home/betoh/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/betoh/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/betoh/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/betoh/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.6.2/junit-jupiter-engine-5.6.2.jar:/home/betoh/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/home/betoh/.m2/repository/org/junit/platform/junit-platform-engine/1.6.2/junit-platform-engine-1.6.2.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.6.2/junit-jupiter-params-5.6.2.jar:/home/betoh/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.6.2/junit-jupiter-api-5.6.2.jar:/home/betoh/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/betoh/.m2/repository/org/junit/platform/junit-platform-commons/1.6.2/junit-platform-commons-1.6.2.jar:/home/betoh/.m2/repository/org/mockito/mockito-core/3.4.0/mockito-core-3.4.0.jar:/home/betoh/.m2/repository/net/bytebuddy/byte-buddy/1.10.10/byte-buddy-1.10.10.jar:/home/betoh/.m2/repository/net/bytebuddy/byte-buddy-agent/1.10.10/byte-buddy-agent-1.10.10.jar:/home/betoh/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/betoh"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="/usr/lib/jvm/java-21-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master/target/surefire/surefirebooter11033460137518233711.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.4+7-Ubuntu-1ubuntu222.04"/>
    <property name="user.name" value="betoh"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="5.15.133.1-microsoft-standard-WSL2"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="/home/betoh/.vscode-server/extensions/oracle.oracle-java-22.1.1/nbcode/java/maven-nblib/netbeans-eventspy.jar"/>
    <property name="localRepository" value="/home/betoh/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-21"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="21.0.4"/>
    <property name="user.dir" value="/home/betoh/Area-de-Trabajo/hashtable-open-8-16-master"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Ubuntu"/>
    <property name="java.vm.version" value="21.0.4+7-Ubuntu-1ubuntu222.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testSimpleFilling{String, int[], String}[1]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.039">
    <error message="Index -1 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)
</error>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[2]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <error message="Index -6 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)
</error>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[3]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <error message="Index -5 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)
</error>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[4]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.005">
    <failure message="Failed at 8 ==&gt; expected: &lt;[0, 8, 16, 32, 24, 256, 0, 0]&gt; but was: &lt;[0, 16, 32, 256, 8, 24]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: Failed at 8 ==> expected: <[0, 8, 16, 32, 24, 256, 0, 0]> but was: <[0, 16, 32, 256, 8, 24]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:37)
]]></failure>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[5]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <failure message="Failed at 2 ==&gt; expected: &lt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&gt; but was: &lt;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: Failed at 2 ==> expected: <[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]> but was: <[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:37)
]]></failure>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[6]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002"/>
  <testcase name="testSimpleFilling{String, int[], String}[7]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -5 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)
</error>
  </testcase>
  <testcase name="testSimpleFilling{String, int[], String}[8]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -2 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -2 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testSimpleFilling(HashtableOpen8to16Test.java:34)
</error>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[1]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.003">
    <error message="Index -1 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)
</error>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[2]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -6 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)
</error>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[3]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -5 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)
</error>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[4]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.003">
    <failure message="Failed at 8 ==&gt; expected: &lt;[0, 8, 16, 32, 24, 256, 0, 0]&#10;[0, 8, 16, 32, 24, 256, 0, 0]&#10;[0, 8, 16, 32, 24, 256, 0, 0]&#10;[0, 0, 16, 32, 24, 256, 0, 0]&#10;[0, 0, 16, 32, 24, 256, 0, 0]&#10;[0, 0, 16, 32, 24, 256, 0, 0]&#10;[0, 0, 0, 32, 24, 256, 0, 0]&#10;[24, 256, 0, 0]&#10;[256, 0]&#10;[0, 0]&#10;[0, 0]&#10;[0, 0]&#10;[0, 0]&#10;[0, 0]&gt; but was: &lt;[0, 16, 32, 256, 8, 24]&#10;[16, 32, 256, 8, 24]&#10;[16, 32, 256, 8, 24]&#10;[16, 32, 256, 24]&#10;[16, 32, 256, 24]&#10;[16, 32, 256, 24]&#10;[32, 256, 24]&#10;[256, 24]&#10;[256]&#10;[]&#10;[]&#10;[]&#10;[]&#10;[]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 8 ==> expected: <[0, 8, 16, 32, 24, 256, 0, 0]
[0, 8, 16, 32, 24, 256, 0, 0]
[0, 8, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 16, 32, 24, 256, 0, 0]
[0, 0, 0, 32, 24, 256, 0, 0]
[24, 256, 0, 0]
[256, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]> but was: <[0, 16, 32, 256, 8, 24]
[16, 32, 256, 8, 24]
[16, 32, 256, 8, 24]
[16, 32, 256, 24]
[16, 32, 256, 24]
[16, 32, 256, 24]
[32, 256, 24]
[256, 24]
[256]
[]
[]
[]
[]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)
]]></failure>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[5]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <failure message="Failed at 2 ==&gt; expected: &lt;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[8, 9, 10, 0, 0, 0, 0, 7]&#10;[8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 9, 10, 0]&#10;[10, 0]&#10;[0, 0]&gt; but was: &lt;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&#10;[2, 3, 4, 5, 6, 7, 8, 9, 10]&#10;[3, 4, 5, 6, 7, 8, 9, 10]&#10;[4, 5, 6, 7, 8, 9, 10]&#10;[5, 6, 7, 8, 9, 10]&#10;[6, 7, 8, 9, 10]&#10;[8, 9, 10, 7]&#10;[8, 9, 10]&#10;[9, 10]&#10;[10]&#10;[]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 2 ==> expected: <[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[8, 9, 10, 0, 0, 0, 0, 7]
[8, 9, 10, 0, 0, 0, 0, 0]
[0, 9, 10, 0]
[10, 0]
[0, 0]> but was: <[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[2, 3, 4, 5, 6, 7, 8, 9, 10]
[3, 4, 5, 6, 7, 8, 9, 10]
[4, 5, 6, 7, 8, 9, 10]
[5, 6, 7, 8, 9, 10]
[6, 7, 8, 9, 10]
[8, 9, 10, 7]
[8, 9, 10]
[9, 10]
[10]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)
]]></failure>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[6]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.003">
    <failure message="Failed at 1 ==&gt; expected: &lt;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 13, 14, 15]&#10;[16, 0, 0, 0, 0, 0, 14, 15]&#10;[16, 0, 0, 15]&#10;[16, 0]&#10;[0, 0]&gt; but was: &lt;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 10, 11, 12, 13, 14, 15]&#10;[16, 11, 12, 13, 14, 15]&#10;[16, 12, 13, 14, 15]&#10;[16, 13, 14, 15]&#10;[16, 14, 15]&#10;[16, 15]&#10;[16]&#10;[]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 1 ==> expected: <[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]
[16, 0, 0, 0, 0, 13, 14, 15]
[16, 0, 0, 0, 0, 0, 14, 15]
[16, 0, 0, 15]
[16, 0]
[0, 0]> but was: <[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 9, 10, 11, 12, 13, 14, 15]
[16, 10, 11, 12, 13, 14, 15]
[16, 11, 12, 13, 14, 15]
[16, 12, 13, 14, 15]
[16, 13, 14, 15]
[16, 14, 15]
[16, 15]
[16]
[]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:57)
]]></failure>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[7]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <error message="Index -5 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)
</error>
  </testcase>
  <testcase name="testFillingAndThenGradualRemove{String, int[], List}[8]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -2 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -2 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testFillingAndThenGradualRemove(HashtableOpen8to16Test.java:46)
</error>
  </testcase>
  <testcase name="testOverflow" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.003">
    <failure message="Expected java.lang.IllegalStateException to be thrown, but nothing was thrown." type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: Expected java.lang.IllegalStateException to be thrown, but nothing was thrown.
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testOverflow(HashtableOpen8to16Test.java:165)
</failure>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[1]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <error message="Index -4 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -4 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)
</error>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[2]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.002">
    <error message="Index -6 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -6 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)
</error>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[3]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -1 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)
</error>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[4]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.004">
    <failure message="Failed at 8 ==&gt; expected: &lt;[24, 0, 0, 0, 0, 0, 0, 0]&#10;[24, 8, 0, 0, 0, 0, 0, 0]&#10;[24, 8, 256, 0, 0, 0, 0, 0]&#10;[24, 8, 256, 0, 0, 0, 0, 0]&#10;[24, 8, 256, 0, 0, 0, 0, 0]&#10;[24, 8, 256, 0, 16, 0, 0, 0]&#10;[24, 8, 256, 0, 16, 0, 0, 0]&#10;[24, 8, 256, 0, 16, 0, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 16, 32, 0, 0]&#10;[24, 8, 256, 0, 0, 32, 0, 0]&#10;[0, 8, 256, 0, 0, 32, 0, 0]&#10;[256, 32, 0, 0]&#10;[256, 32, 0, 0]&#10;[32, 0]&#10;[32, 0]&#10;[32, 0]&#10;[0, 0]&#10;[0, 0]&#10;[0, 0]&#10;[0, 0]&#10;[16, 0]&#10;[16, 0]&#10;[16, 0, 8, 0]&#10;[16, 0, 8, 0]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32, 256, 0, 0, 0]&#10;[16, 0, 8, 32, 256, 0, 0, 0]&#10;[16, 0, 8, 32, 256, 0, 0, 0]&#10;[16, 0, 8, 32, 256, 24, 0, 0]&#10;[16, 0, 8, 32, 256, 24, 0, 0]&gt; but was: &lt;[24]&#10;[24, 8]&#10;[24, 8, 256]&#10;[24, 8, 256, 0]&#10;[24, 8, 256, 0]&#10;[24, 8, 256, 0, 16]&#10;[24, 8, 256, 0, 16]&#10;[24, 8, 256, 0, 16]&#10;[24, 8, 256, 0, 16, 32]&#10;[256, 0, 16, 32, 24, 8]&#10;[256, 0, 16, 32, 24, 8]&#10;[256, 0, 16, 32, 24, 8]&#10;[256, 0, 16, 32, 24, 8]&#10;[256, 16, 32, 24, 8]&#10;[256, 16, 32, 24, 8]&#10;[256, 32, 24, 8]&#10;[256, 32, 8]&#10;[256, 32]&#10;[256, 32]&#10;[32]&#10;[32]&#10;[32]&#10;[]&#10;[]&#10;[]&#10;[]&#10;[16]&#10;[16, 0]&#10;[16, 0, 8]&#10;[16, 0, 8]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[16, 0, 8, 32]&#10;[256, 16, 0, 8, 32]&#10;[256, 16, 0, 8, 32]&#10;[256, 16, 0, 8, 32]&#10;[256, 16, 0, 8, 32]&#10;[256, 16, 0, 8, 32]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 8 ==> expected: <[24, 0, 0, 0, 0, 0, 0, 0]
[24, 8, 0, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 0, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 0, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 16, 32, 0, 0]
[24, 8, 256, 0, 0, 32, 0, 0]
[0, 8, 256, 0, 0, 32, 0, 0]
[256, 32, 0, 0]
[256, 32, 0, 0]
[32, 0]
[32, 0]
[32, 0]
[0, 0]
[0, 0]
[0, 0]
[0, 0]
[16, 0]
[16, 0]
[16, 0, 8, 0]
[16, 0, 8, 0]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 0, 0, 0]
[16, 0, 8, 32, 256, 24, 0, 0]
[16, 0, 8, 32, 256, 24, 0, 0]> but was: <[24]
[24, 8]
[24, 8, 256]
[24, 8, 256, 0]
[24, 8, 256, 0]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16]
[24, 8, 256, 0, 16, 32]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 0, 16, 32, 24, 8]
[256, 16, 32, 24, 8]
[256, 16, 32, 24, 8]
[256, 32, 24, 8]
[256, 32, 8]
[256, 32]
[256, 32]
[32]
[32]
[32]
[]
[]
[]
[]
[16]
[16, 0]
[16, 0, 8]
[16, 0, 8]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]
[256, 16, 0, 8, 32]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)
]]></failure>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[5]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.003">
    <failure message="Failed at 2 ==&gt; expected: &lt;[0, 0, 0, 0, 0, 0, 0, 7]&#10;[0, 0, 0, 0, 0, 0, 6, 7]&#10;[0, 0, 2, 0, 0, 0, 6, 7]&#10;[0, 0, 2, 0, 4, 0, 6, 7]&#10;[0, 9, 2, 0, 4, 0, 6, 7]&#10;[8, 9, 2, 0, 4, 0, 6, 7]&#10;[8, 9, 2, 10, 4, 0, 6, 7]&#10;[8, 9, 2, 10, 4, 1, 6, 7]&#10;[0, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 2, 0, 4, 5, 6, 0, 8, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 2, 0, 4, 5, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 0, 2, 0, 4, 0, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]&#10;[0, 9, 2, 0, 4, 0, 6, 0]&#10;[0, 0, 2, 0, 4, 0, 6, 0]&#10;[4, 0, 6, 0]&#10;[6, 0]&#10;[0, 0]&#10;[0, 5]&#10;[6, 5]&#10;[0, 5, 6, 10]&#10;[8, 5, 6, 10]&#10;[8, 0, 10, 3, 0, 5, 6, 0]&#10;[8, 0, 10, 3, 2, 5, 6, 0]&#10;[8, 0, 10, 3, 2, 5, 6, 7]&#10;[8, 4, 10, 3, 2, 5, 6, 7]&#10;[0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 0, 0, 0, 0, 0]&#10;[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]&gt; but was: &lt;[7]&#10;[6, 7]&#10;[2, 6, 7]&#10;[2, 4, 6, 7]&#10;[9, 2, 4, 6, 7]&#10;[8, 9, 2, 4, 6, 7]&#10;[2, 4, 6, 7, 8, 9, 10]&#10;[1, 2, 4, 6, 7, 8, 9, 10]&#10;[1, 2, 3, 4, 6, 7, 8, 9, 10]&#10;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&#10;[1, 2, 4, 5, 6, 7, 8, 9, 10]&#10;[2, 4, 5, 6, 7, 8, 9, 10]&#10;[2, 4, 5, 6, 8, 9, 10]&#10;[2, 4, 5, 6, 9, 10]&#10;[2, 4, 6, 9, 10]&#10;[9, 2, 4, 6]&#10;[2, 4, 6]&#10;[4, 6]&#10;[6]&#10;[]&#10;[5]&#10;[5, 6]&#10;[10, 5, 6]&#10;[8, 10, 5, 6]&#10;[8, 10, 5, 6]&#10;[8, 2, 10, 5, 6]&#10;[8, 2, 10, 5, 6]&#10;[8, 2, 10, 4, 5, 6]&#10;[1, 2, 4, 5, 6, 8, 10]&#10;[1, 2, 4, 5, 6, 8, 9, 10]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 2 ==> expected: <[0, 0, 0, 0, 0, 0, 0, 7]
[0, 0, 0, 0, 0, 0, 6, 7]
[0, 0, 2, 0, 0, 0, 6, 7]
[0, 0, 2, 0, 4, 0, 6, 7]
[0, 9, 2, 0, 4, 0, 6, 7]
[8, 9, 2, 0, 4, 0, 6, 7]
[8, 9, 2, 10, 4, 0, 6, 7]
[8, 9, 2, 10, 4, 1, 6, 7]
[0, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 0, 8, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 5, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]
[0, 0, 2, 0, 4, 0, 6, 0, 0, 9, 10, 0, 0, 0, 0, 0]
[0, 9, 2, 0, 4, 0, 6, 0]
[0, 0, 2, 0, 4, 0, 6, 0]
[4, 0, 6, 0]
[6, 0]
[0, 0]
[0, 5]
[6, 5]
[0, 5, 6, 10]
[8, 5, 6, 10]
[8, 0, 10, 3, 0, 5, 6, 0]
[8, 0, 10, 3, 2, 5, 6, 0]
[8, 0, 10, 3, 2, 5, 6, 7]
[8, 4, 10, 3, 2, 5, 6, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 0, 0, 0, 0, 0]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0]> but was: <[7]
[6, 7]
[2, 6, 7]
[2, 4, 6, 7]
[9, 2, 4, 6, 7]
[8, 9, 2, 4, 6, 7]
[2, 4, 6, 7, 8, 9, 10]
[1, 2, 4, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 6, 7, 8, 9, 10]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[1, 2, 4, 5, 6, 7, 8, 9, 10]
[2, 4, 5, 6, 7, 8, 9, 10]
[2, 4, 5, 6, 8, 9, 10]
[2, 4, 5, 6, 9, 10]
[2, 4, 6, 9, 10]
[9, 2, 4, 6]
[2, 4, 6]
[4, 6]
[6]
[]
[5]
[5, 6]
[10, 5, 6]
[8, 10, 5, 6]
[8, 10, 5, 6]
[8, 2, 10, 5, 6]
[8, 2, 10, 5, 6]
[8, 2, 10, 4, 5, 6]
[1, 2, 4, 5, 6, 8, 10]
[1, 2, 4, 5, 6, 8, 9, 10]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)
]]></failure>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[6]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.006">
    <failure message="Failed at 1 ==&gt; expected: &lt;[0, 0, 0, 0, 0, 0, 14, 0]&#10;[0, 0, 0, 0, 0, 0, 14, 6]&#10;[8, 0, 0, 0, 0, 0, 14, 6]&#10;[8, 15, 0, 0, 0, 0, 14, 6]&#10;[8, 15, 0, 11, 0, 0, 14, 6]&#10;[8, 15, 0, 11, 3, 0, 14, 6]&#10;[8, 15, 0, 11, 3, 4, 14, 6]&#10;[8, 15, 16, 11, 3, 4, 14, 6]&#10;[16, 1, 0, 3, 4, 0, 6, 0, 8, 0, 0, 11, 0, 0, 14, 15]&#10;[16, 1, 0, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]&#10;[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]&#10;[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 10, 11, 0, 0, 14, 15]&#10;[16, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]&#10;[16, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]&#10;[16, 1, 2, 0, 4, 5, 0, 7, 8, 9, 10, 0, 12, 13, 14, 0]&#10;[16, 1, 2, 0, 4, 5, 0, 7, 8, 0, 10, 0, 12, 13, 14, 0]&#10;[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 14, 0]&#10;[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]&#10;[16, 1, 2, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]&#10;[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]&#10;[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]&#10;[16, 0, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]&#10;[16, 8, 0, 0, 12, 5, 0, 0]&#10;[16, 0, 0, 0, 12, 5, 0, 0]&#10;[16, 5, 0, 0]&#10;[0, 5]&#10;[0, 0]&#10;[0, 5]&#10;[9, 5]&#10;[8, 9, 5, 0]&#10;[8, 9, 5, 6]&#10;[8, 9, 16, 0, 0, 5, 6, 0]&#10;[8, 9, 16, 3, 0, 5, 6, 0]&#10;[8, 9, 16, 3, 2, 5, 6, 0]&#10;[8, 9, 16, 3, 2, 5, 6, 11]&#10;[16, 0, 2, 3, 0, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]&#10;[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]&#10;[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]&#10;[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]&#10;[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 0, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&gt; but was: &lt;[14]&#10;[14, 6]&#10;[8, 14, 6]&#10;[8, 15, 14, 6]&#10;[8, 15, 11, 14, 6]&#10;[8, 15, 11, 3, 14, 6]&#10;[3, 4, 6, 8, 11, 14, 15]&#10;[16, 3, 4, 6, 8, 11, 14, 15]&#10;[16, 1, 3, 4, 6, 8, 11, 14, 15]&#10;[16, 1, 3, 4, 6, 7, 8, 11, 14, 15]&#10;[16, 1, 2, 3, 4, 6, 7, 8, 11, 14, 15]&#10;[16, 1, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15]&#10;[16, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15]&#10;[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]&#10;[16, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]&#10;[16, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14]&#10;[16, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14]&#10;[16, 1, 2, 4, 5, 8, 10, 12, 13, 14]&#10;[16, 1, 2, 4, 5, 8, 10, 12, 13]&#10;[16, 1, 2, 5, 8, 10, 12, 13]&#10;[16, 1, 5, 8, 10, 12, 13]&#10;[16, 1, 5, 8, 10, 12]&#10;[16, 5, 8, 10, 12]&#10;[16, 8, 12, 5]&#10;[16, 12, 5]&#10;[16, 5]&#10;[5]&#10;[]&#10;[5]&#10;[9, 5]&#10;[9, 8, 5]&#10;[9, 8, 5, 6]&#10;[16, 9, 8, 5, 6]&#10;[16, 9, 8, 5, 6]&#10;[16, 9, 8, 5, 6]&#10;[16, 9, 8, 5, 6]&#10;[16, 9, 8, 5, 6]&#10;[16, 9, 8, 4, 5, 6]&#10;[16, 4, 5, 6, 8, 9, 13]&#10;[16, 1, 4, 5, 6, 8, 9, 13]&#10;[16, 1, 4, 5, 6, 8, 9, 13, 15]&#10;[16, 1, 4, 5, 6, 8, 9, 12, 13, 15]&#10;[16, 1, 4, 5, 6, 8, 9, 12, 13, 14, 15]&#10;[16, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15]&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Failed at 1 ==> expected: <[0, 0, 0, 0, 0, 0, 14, 0]
[0, 0, 0, 0, 0, 0, 14, 6]
[8, 0, 0, 0, 0, 0, 14, 6]
[8, 15, 0, 0, 0, 0, 14, 6]
[8, 15, 0, 11, 0, 0, 14, 6]
[8, 15, 0, 11, 3, 0, 14, 6]
[8, 15, 0, 11, 3, 4, 14, 6]
[8, 15, 16, 11, 3, 4, 14, 6]
[16, 1, 0, 3, 4, 0, 6, 0, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 0, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 0, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 0, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 0, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 7, 8, 9, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 7, 8, 0, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 14, 0]
[16, 1, 2, 0, 4, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 2, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 13, 0, 0]
[16, 1, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]
[16, 0, 0, 0, 0, 5, 0, 0, 8, 0, 10, 0, 12, 0, 0, 0]
[16, 8, 0, 0, 12, 5, 0, 0]
[16, 0, 0, 0, 12, 5, 0, 0]
[16, 5, 0, 0]
[0, 5]
[0, 0]
[0, 5]
[9, 5]
[8, 9, 5, 0]
[8, 9, 5, 6]
[8, 9, 16, 0, 0, 5, 6, 0]
[8, 9, 16, 3, 0, 5, 6, 0]
[8, 9, 16, 3, 2, 5, 6, 0]
[8, 9, 16, 3, 2, 5, 6, 11]
[16, 0, 2, 3, 0, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]
[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 0, 0, 0]
[16, 0, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 0]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 0, 13, 0, 15]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 0, 15]
[16, 1, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]> but was: <[14]
[14, 6]
[8, 14, 6]
[8, 15, 14, 6]
[8, 15, 11, 14, 6]
[8, 15, 11, 3, 14, 6]
[3, 4, 6, 8, 11, 14, 15]
[16, 3, 4, 6, 8, 11, 14, 15]
[16, 1, 3, 4, 6, 8, 11, 14, 15]
[16, 1, 3, 4, 6, 7, 8, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15]
[16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 8, 10, 12, 13, 14]
[16, 1, 2, 4, 5, 8, 10, 12, 13]
[16, 1, 2, 5, 8, 10, 12, 13]
[16, 1, 5, 8, 10, 12, 13]
[16, 1, 5, 8, 10, 12]
[16, 5, 8, 10, 12]
[16, 8, 12, 5]
[16, 12, 5]
[16, 5]
[5]
[]
[5]
[9, 5]
[9, 8, 5]
[9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 5, 6]
[16, 9, 8, 4, 5, 6]
[16, 4, 5, 6, 8, 9, 13]
[16, 1, 4, 5, 6, 8, 9, 13]
[16, 1, 4, 5, 6, 8, 9, 13, 15]
[16, 1, 4, 5, 6, 8, 9, 12, 13, 15]
[16, 1, 4, 5, 6, 8, 9, 12, 13, 14, 15]
[16, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15]>
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:91)
]]></failure>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[7]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -5 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -5 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)
</error>
  </testcase>
  <testcase name="testRandomFillAndRefill{String, int[], List}[8]" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001">
    <error message="Index -3 out of bounds for length 8" type="java.lang.ArrayIndexOutOfBoundsException">java.lang.ArrayIndexOutOfBoundsException: Index -3 out of bounds for length 8
	at com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test.testRandomFillAndRefill(HashtableOpen8to16Test.java:75)
</error>
  </testcase>
  <testcase name="testSearch" classname="com.epam.rd.autocode.hashtableopen816.HashtableOpen8to16Test" time="0.001"/>
</testsuite>